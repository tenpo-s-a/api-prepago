pipeline:

  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./.m2
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push ]

  dbusers_migration:
    image: mccontainerregistry.azurecr.io/api-users-dbmigration:dbmigration-462fd8e2aa5c2482d0a8990dee681ad8688fb57c
    commands:
      - sleep 15
      - cd /app/pg && ./db-create.sh -Denv=ci
      - cd /app/pg && ./migrate-up.sh -Denv=ci
    when:
      event: [ push ]
      branch:
        exclude: master

  db_test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=ci
      - ./migrate-up.sh -Denv=ci
      - ./test.sh -Denv=ci
    when:
      event: [ push ]
      branch:
        exclude: master

  app_unit-test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app
      - ./test.sh
      - mkdir -p unit-tests && cp ./target/jacoco.exec ./unit-tests
    when:
      event: [ push ]
      branch:
        exclude: master

  app_integration-test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app
      - ./integration-test.sh -Denv=ci &> integration-test.log
      - mkdir -p integration-tests && cp ./target/jacoco.exec ./integration-tests
    when:
      event: [ push ]
      branch:
        exclude: master

  #upload_to_sonar:
  #  image: maven:3.6.0-jdk-8-alpine
  #  commands:
  #    - ./drone-mvn-cache.sh
  #    - cd app
  #    - mvn sonar:sonar
  #  when:
  #    event: [ push ]
  #    branch:
  #      exclude: master

  print_log:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - touch ./app/integration-test.log
      - tail -n 500 ./app/integration-test.log
    when:
      event: [ push ]
      status: [ success, failure ]

  db_migration_staging:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=development
      - ./migrate-up.sh -Denv=development
    when:
      event: [ push ]
      branch: master

  db_migration_sandbox:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=sandbox
      - ./migrate-up.sh -Denv=sandbox
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  build:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app && ./package.sh
    when:
      event: [ push ]
      branch: master

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./.m2
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push ]

  publish_dbmigration_image:
    registry: mccontainerregistry.azurecr.io
    image: plugins/docker
    repo: mccontainerregistry.azurecr.io/api-prepago-dbmigration
    tags:
      - dbmigration-${DRONE_COMMIT_SHA}
    dockerfile: Dockerfile.ci.migration
    secrets: [ docker_username, docker_password ]
    when:
      event: [ push ]
      branch: master

  #publish_ci_image:
  #  registry: mccontainerregistry.azurecr.io
  #  image: plugins/docker
  #  repo: mccontainerregistry.azurecr.io/api-prepago
  #  tags:
  #    - ci-${DRONE_COMMIT_SHA}
  #  dockerfile: Dockerfile.ci
  #  secrets: [ docker_username, docker_password ]
  #  when:
  #    event: [ push ]
  #    branch: master

  publish_image:
    registry: mccontainerregistry.azurecr.io
    image: plugins/docker
    repo: mccontainerregistry.azurecr.io/api-prepago
    tags:
      - ${DRONE_COMMIT_SHA}
    secrets: [ docker_username, docker_password ]
    when:
      event: [ push ]
      branch: master

  kong_staging:
    image: mccontainerregistry.azurecr.io/tools/drone-terraform:2.0.0
    root_dir: terraform
    init_options:
      backend-config:
        - "path=apps/api-prepaid/staging/terraform-state"
    vars:
      kong_admin_uri: https://kong.staging.multicajadigital.cloud/admin
      cluster_environment: staging
    secrets:
      - source: consul_http_addr
        target: CONSUL_HTTP_ADDR
      - source: consul_http_token
        target: CONSUL_HTTP_TOKEN
    when:
      event: [ push ]
      branch: [ master ]

  kong_sandbox:
    image: mccontainerregistry.azurecr.io/tools/drone-terraform:2.0.0
    root_dir: terraform
    init_options:
      backend-config:
        - "path=apps/api-prepaid/sandbox/terraform-state"
    vars:
      kong_admin_uri: https://kong.sandbox.multicajadigital.cloud/admin
      cluster_environment: sandbox
    secrets:
      - source: consul_http_addr
        target: CONSUL_HTTP_ADDR
      - source: consul_http_token
        target: CONSUL_HTTP_TOKEN
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  kong_production:
    image: mccontainerregistry.azurecr.io/tools/drone-terraform:2.0.0
    root_dir: terraform
    init_options:
      backend-config:
        - "path=apps/api-prepaid/production/terraform-state"
    vars:
      kong_admin_uri: https://kong.production.multicajadigital.cloud/admin
      cluster_environment: production
    secrets:
      - source: consul_http_addr
        target: CONSUL_HTTP_ADDR
      - source: consul_http_token
        target: CONSUL_HTTP_TOKEN
    when:
      event: [ tag ]
      ref: refs/tags/release*

  deploy_to_staging:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:0.1.4
    cluster: staging
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
    when:
      event: [ push ]
      branch: master

  deploy_to_sandbox:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:0.1.4
    cluster: sandbox
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
      - DB_NAME=prepago_api
      - API_ENVIRONMENT=sandbox
    consul_kv: env/sandbox.env
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  deploy_to_production:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:0.1.4
    cluster: production
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
    when:
      event: [ tag ]
      ref: refs/tags/release*

  slack:
    image: mccontainerregistry.azurecr.io/tools/drone-slack:1.0.0
    channel: drone_deployments
    icon_emoji: ":package:"
    when:
      status: [ success, failure ]

services:
  database:
    image: postgres:9.6.3-alpine
    when:
      event: [ push ]
      branch:
        exclude: master

  api-users:
    image: mccontainerregistry.azurecr.io/api-users:acb7a72a3c6652b867225fab0fe7def233724d4f
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=api_users_ci
      - DB_HOST_FQDN=database
      - API_ENVIRONMENT=ci
    log-driver: none
    when:
      event: [ push ]
      branch:
        exclude: master

  queue:
    image: webcenter/activemq:5.14.3
    environment:
      - ACTIVEMQ_CONFIG_MINMEMORY=256
      - ACTIVEMQ_CONFIG_MAXMEMORY=512
      - ACTIVEMQ_ADMIN_LOGIN=system
      - ACTIVEMQ_ADMIN_PASSWORD=jdxnhyr674Hbf$5cx0
    when:
      event: [ push ]
      branch:
        exclude: master

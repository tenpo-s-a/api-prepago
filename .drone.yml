pipeline:

  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./.m2
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push, tag ]

  db_test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=ci
      - ./migrate-up.sh -Denv=ci
      - ./test.sh -Denv=ci
    when:
      event: [ push ]
      branch:
        exclude: master

  app_unit-test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app
      - ./test.sh
      - mkdir -p unit-tests && cp ./target/jacoco.exec ./unit-tests
    when:
      event: [ push ]
      branch:
        exclude: master

  app_integration-test:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app
      - ./integration-test.sh -Denv=ci &> integration-test.log
      - mkdir -p integration-tests && cp ./target/jacoco.exec ./integration-tests
    when:
      event: [ push ]
      branch:
        exclude: master

  #upload_to_sonar:
  #  image: maven:3.6.0-jdk-8-alpine
  #  commands:
  #    - ./drone-mvn-cache.sh
  #    - cd app
  #    - mvn sonar:sonar
  #  when:
  #    event: [ push ]
  #    branch:
  #      exclude: master

  print_log:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - touch ./app/integration-test.log
      - tail -n 500 ./app/integration-test.log
    when:
      event: [ push ]
      status: [ success, failure ]
      branch:
        exclude: master

  consul:
    image: hashicorp/consul-template:alpine
    commands:
      - /bin/consul-template -template "./app/src/main/resources/api-prepaid/staging.properties.tmpl:./app/src/main/resources/api-prepaid/staging.properties" -once
      - /bin/consul-template -template "./app/src/main/resources/api-prepaid/uat.properties.tmpl:./app/src/main/resources/api-prepaid/uat.properties" -once
      - /bin/consul-template -template "./app/src/main/resources/api-prepaid/uat_mock.properties.tmpl:./app/src/main/resources/api-prepaid/uat_mock.properties" -once
      - /bin/consul-template -template "./consul_template/cert_uat.tmpl:./cert" -once
    secrets:
      - consul_http_addr
      - consul_http_token
    when:
      event: [ push ]
      branch: master

  consul_prod:
    image: hashicorp/consul-template:alpine
    commands:
      - /bin/consul-template -template "./app/src/main/resources/api-prepaid/production.properties.tmpl:./app/src/main/resources/api-prepaid/production.properties" -once
      - /bin/consul-template -template "./consul_template/cert_production.tmpl:./cert" -once
    secrets:
      - consul_http_addr
      - consul_http_token
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  build:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app && ./package.sh
    when:
      event: [ push ]
      branch: master

  build_prod:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd app && ./package.sh
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  publish_image:
    registry: mccontainerregistry.azurecr.io
    image: plugins/docker
    repo: mccontainerregistry.azurecr.io/api-prepago
    tags:
      - ${DRONE_COMMIT_SHA}
      - latest
    build_args:
      - TECNOCOM_CERT_NAME=procemisorqachile
    secrets: [ docker_username, docker_password ]
    custom_dns: [168.63.129.16]
    when:
      event: [ push ]
      branch: master

  publish_image_prod:
    registry: mcdtenpocontainerregistry.azurecr.io
    image: plugins/docker
    repo: mcdtenpocontainerregistry.azurecr.io/api-prepago
    tags:
      - ${DRONE_COMMIT_SHA}
      - ${DRONE_TAG}
      - latest
    secrets: [ docker_username, docker_password ]
    build_args:
      - TECNOCOM_CERT_NAME=procemisorchile
    custom_dns: [168.63.129.16]
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  db_migration_staging:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=development
      - ./migrate-up.sh -Denv=development
      - ./migrate-pending.sh -Denv=development
    when:
      event: [ push ]
      branch: master

  db_consul_uat:
    image: hashicorp/consul-template:alpine
    commands:
      - /bin/consul-template -template "./pg/environments/uat.properties.tmpl:./pg/environments/uat.properties" -once
      - /bin/consul-template -template "./pg/environments/uat_mock.properties.tmpl:./pg/environments/uat_mock.properties" -once
    environment:
      - DB_NAME=prepago_api
      - DB_MOCK_NAME=prepago_api_mock
    secrets:
      - consul_http_addr
      - consul_http_token
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  db_consul_prod:
    image: hashicorp/consul-template:alpine
    commands:
      - /bin/consul-template -template "./pg/environments/production.properties.tmpl:./pg/environments/production.properties" -once
    environment:
      - DB_NAME=prepago_api
    secrets:
      - consul_http_addr
      - consul_http_token
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  db_migration_uat:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=uat
      - ./migrate-up.sh -Denv=uat
      - ./migrate-pending.sh -Denv=uat
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  db_mock_migration_uat:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=uat_mock
      - ./migrate-up.sh -Denv=uat_mock
      - ./migrate-pending.sh -Denv=uat_mock
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  db_migration_prod:
    image: maven:3.6.0-jdk-8-alpine
    commands:
      - ./drone-mvn-cache.sh
      - cd pg
      - ./db-create.sh -Denv=production
      - ./migrate-up.sh -Denv=production
      - ./migrate-pending.sh -Denv=production
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  deploy_to_staging:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: staging
    template: kube.staging.yml
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
      - DB_NAME=prepago_api_dev
      - API_ENVIRONMENT=staging
      - DB_USERNAME=prepago
      - DB_PASSWORD=N8BC2VQ74PrGv4SeXdHvcT8VPT7pTWU2
      - DB_HOST_FQDN=prepaid-postgresql-staging.postgres.database.azure.com
      - DB_HOST_NAME=prepaid-postgresql-staging
    when:
      event: [ push ]
      branch: master

  deploy_to_uat:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: delta
    template: kube.uat.yml
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
      - DB_NAME=prepago_api
      - API_ENVIRONMENT=uat
    consul_kv: env/uat.env
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  deploy_mock_to_uat:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: delta
    template: deployment-mock.uat.yml
    vars:
      - IMAGE=mccontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
      - DB_NAME=prepago_api_mock
      - API_ENVIRONMENT=uat_mock
    consul_kv: env/uat.env
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  deploy_virtual_service_to_uat:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: delta
    template: virtual-service.uat.yml
    consul_kv: env/uat.env
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  deploy_destination_rule_to_uat:
    image: mccontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: delta
    template: destination-rule.uat.yml
    when:
      event: [ tag ]
      ref: refs/tags/snapshot*

  deploy_to_prod:
    image: mcdtenpocontainerregistry.azurecr.io/tools/drone-phoenix:1.0.0
    cluster: atlas
    template: kube.production.yml
    consul_kv: env/production.env
    vars:
      - IMAGE=mcdtenpocontainerregistry.azurecr.io/api-prepago:${DRONE_COMMIT_SHA}
      - DB_NAME=prepago_api
      - API_ENVIRONMENT=production
    secrets:
      - source: consul_http_addr
        target: CONSUL_HTTP_ADDR
      - source: consul_http_token
        target: CONSUL_HTTP_TOKEN
    when:
      event: [ tag ]
      ref: refs/tags/prod-*

  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./.m2
    volumes:
      - /tmp/cache:/cache
    when:
      event: [ push, tag ]

  slack:
    image: mccontainerregistry.azurecr.io/tools/drone-slack:1.0.0
    channel: drone_deployments
    icon_emoji: ":package:"
    when:
      ref:
        exclude: refs/tags/prod-*
      status: [ success, failure ]

services:
  database:
    image: postgres:9.6.3-alpine
    when:
      event: [ push ]
      branch:
        exclude: master

  queue:
    image: webcenter/activemq:5.14.3
    environment:
      - ACTIVEMQ_CONFIG_MINMEMORY=256
      - ACTIVEMQ_CONFIG_MAXMEMORY=512
      - ACTIVEMQ_ADMIN_LOGIN=system
      - ACTIVEMQ_ADMIN_PASSWORD=jdxnhyr674Hbf$5cx0
    when:
      event: [ push ]
      branch:
        exclude: master
